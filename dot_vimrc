" Custom VIM configuration file
"
" vi... IMproved
set nocompatible

" ------
" VUNDLE
" ------
filetype off
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" plugins go here
"
" Ctrl-P for fuzzy find in buffers and filesystem
Plugin 'kien/ctrlp.vim'
" Easy navigation between vim and tmux panes
Plugin 'christoomey/vim-tmux-navigator'
" Seoul colorscheme
Plugin 'junegunn/seoul256.vim.git'
" NERDTree for file exploring
Plugin 'scrooloose/nerdtree'
" Synatx checking
Plugin 'scrooloose/syntastic'
" Airline
Plugin 'bling/vim-airline'
" Ack to grep files
Plugin 'mileszs/ack.vim'
" code completion
Plugin 'Valloric/YouCompleteMe'
" Git wrapper
Plugin 'tpope/vim-fugitive'
" Surround control
Plugin 'tpope/vim-surround'
" For javascript
Plugin 'pangloss/vim-javascript'
" Quick HTML coding
Plugin 'mattn/emmet-vim'
" auto close brackets and such
Plugin 'Townk/vim-autoclose'

" All of your Plugins must be added before the following line
call vundle#end()            " required

" -----------------
" AUTO-RELOAD VIMRC
" -----------------

augroup reload_vimrc " {
  autocmd!
  autocmd BufWritePost $MYVIMRC source $MYVIMRC
augroup END " }


" --------------
" FILES LOCATION
" --------------

" swap files
set directory=$HOME/.vim/swap//

" ------------------
" BASIC CONFIGURATION
" -------------------

" detect file type
filetype plugin indent on

" syntax highlighting
syntax on

" highlight search results
set hlsearch

" find as you type
set incsearch

" case insensitive search
set ignorecase
set smartcase

" indent same level as previous line
set autoindent

" line numbering
set number

" highlight current line
set cursorline

" backspace for dummy..
set backspace=indent,eol,start

" stop wrapping long lines\
set nowrap

" Change working directory to the current file location
autocmd BufEnter * if bufname("") !~ "^\[A-Za-z0-9\]*://" | lcd %:p:h | endif

" more history
set history=1000

" keep a few lines around when scrolling
set scrolloff=5

" encoding
set encoding=utf-8

" ------
" INDENT
" ------

" replace tabs with spaces
set expandtab

" default 2 spaces for indent
set shiftwidth=2

" indentation every 2 columns
set tabstop=2

" backspace deletes indent
set softtabstop=2

" for python file, use 4 spaces for indent
autocmd FileType python set sw=4
autocmd FileType python set ts=4
autocmd FileType python set sts=4



" --------
" MAPPINGS
" --------

" arrows are baad
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

" leader key is ,
let mapleader = ','

" paste mode with F12
set pastetoggle=<F12>

" clear search highlighting
nmap <silent> <leader>/ :invhlsearch<CR>

" visual shifting without loosing selection
vnoremap < <gv
vnoremap > >gv

" sudo to write file if required
cmap w!! w !sudo tee % >/dev/null

" adjust panes to be the same size
map <leader>= <C-w>=
" -----------
" COLORSCHEME
" -----------

" force 256 colors
set t_Co=256

set background=dark
" a bit darker
let g:seoul256_background = 235
colorscheme seoul256


" --------------------
" Plugin configuration
" --------------------

" Airline
" -------

" show airline all the time
set laststatus=2
" add support for powerline font
let g:airline_powerline_fonts = 1

" NERDTree
" --------

" toggle nerdtree
map <C-e> :NERDTreeToggle<CR>

" show current file in NERDTree
map <leader>e :NERDTreeFind<CR>

" NERDTree configuration
let NERDTreeShowBookmarks=1
let NERDTreeIgnore=['\.py[cd]$', '\~$', '\.swo$', '\.swp$', '^\.git$', '^\.hg$', '^\.svn$', '\.bzr$']
let NERDTreeChDirMode=0
let NERDTreeQuitOnOpen=0
let NERDTreeMouseMode=2
let NERDTreeShowHidden=1
let NERDTreeKeepTreeInNewTab=1

" CtrlP
" -----
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\.git$\|\.hg$\|\.svn$',
  \ 'file': '\.exe$\|\.so$\|\.dll$\|\.pyc$' }


" leader-p will search in buffers
nnoremap <leader>p :CtrlPBuffer<CR>

" YouCompleteMe
" -------------

" jump to definition
nnoremap <leader>jd :YcmCompleter GoTo<CR>

" Tmux-navigation
" ---------------

" requires to kill the bash ctrl-j handler
let g:BASH_Ctrl_j = 'off'

" Emmet
" -----

" Emmet completion triggered with ctrl-m,
let g:user_emmet_leader_key='<C-m>'

" Fugitive
" --------

" to make it a bit quicker
nnoremap <leader>ga :Gwrite<CR>
nnoremap <leader>gcm :Gcommit<CR>
nnoremap <leader>gco :Gcheckout<CR>
nnoremap <leader>gpl :Gpull<CR>
nnoremap <leader>gps :Gpush<CR>
nnoremap <leader>gs :Gstatus<CR>
